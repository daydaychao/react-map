{
    "sourceFile": "src/components/Atom.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1681728931762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681728939430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+\n+//import useState\n+import React, { useEffect, useState } from 'react'\n+import { useAtom } from 'jotai'\n+import { cardAtom, cardType } from '../store/atom'\n+\n+const CARD_BOX = {\n+  width: 60,\n+  height: 100\n+}\n+\n+export default function Map() {\n+  const [currentX, setCurrentX] = useState(0)\n+  const [currentY, setCurrentY] = useState(0)\n+  const [cards, setCards] = useAtom(cardAtom)\n+\n+  const handleScroll = (e: any) => {\n+    console.log('handleScroll', e)\n+  }\n+  console.log('Map.tsx - cards', cards)\n+\n+  return (\n+    <div className=\"card-world\">\n+      <div className=\"card-view\" onScroll={handleScroll}>\n+        <div className=\"card-wrapper\" style={{ transform: `translate(${currentX}px, ${currentY}px)` }}>\n+          {renderCards(cards)}\n+        </div>\n+      </div>\n+    </div>\n+  )\n+}\n+\n+// 渲染卡片\n+function renderCards(cards: cardType[]) {\n+  console.log('renderCards', cards)\n+  //取得x,y整數\n+  let maxX = -Infinity\n+  let minX = Infinity\n+  let maxY = -Infinity\n+  let minY = Infinity\n+  let totalX = 0\n+  let totalY = 0\n+\n+  for (const card of cards) {\n+    maxX = Math.max(maxX, card.x)\n+    minX = Math.min(minX, card.x)\n+    maxY = Math.max(maxY, card.y)\n+    minY = Math.min(minY, card.y)\n+    totalX += Math.abs(card.x)\n+    totalY += Math.abs(card.y)\n+  }\n+\n+  totalX = Math.abs(maxX) + Math.abs(minX)\n+  totalY = Math.abs(maxY) + Math.abs(minY)\n+\n+  console.log({ totalX, totalY })\n+\n+  return cards?.map((card, index) => (\n+    <div\n+      key={'card' + index}\n+      style={{\n+        gridColumn: `${card.x + totalY / 2} / ${card.x + totalY / 2 + 1}`,\n+        gridRow: `${card.y + totalX / 2} / ${card.y + totalX / 2 + 1}`,\n+        width: CARD_BOX.width + 'px',\n+        height: CARD_BOX.height + 'px',\n+        margin: '10px',\n+        backgroundColor: card.color\n+      }}>\n+      <h4>{card.name}</h4>\n+    </div>\n+  ))\n+}\n+function atom(arg0: (get: any) => any): any {\n+  throw new Error('Function not implemented.')\n+}\n+\n+\n+let maxX = 3\n+setInterval(() => {\n+  maxX++\n+  const newCard: cardType = { x: maxX, y: 0, color: 'red', name: '1' }\n+\n+  setCard([...card, newCard])\n+\n+  console.log('atom.ts - cardAtom', cardAtom)\n+}, 1000)\n"
                },
                {
                    "date": 1681728945689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,33 +54,6 @@\n   totalY = Math.abs(maxY) + Math.abs(minY)\n \n   console.log({ totalX, totalY })\n \n-  return cards?.map((card, index) => (\n-    <div\n-      key={'card' + index}\n-      style={{\n-        gridColumn: `${card.x + totalY / 2} / ${card.x + totalY / 2 + 1}`,\n-        gridRow: `${card.y + totalX / 2} / ${card.y + totalX / 2 + 1}`,\n-        width: CARD_BOX.width + 'px',\n-        height: CARD_BOX.height + 'px',\n-        margin: '10px',\n-        backgroundColor: card.color\n-      }}>\n-      <h4>{card.name}</h4>\n-    </div>\n-  ))\n }\n-function atom(arg0: (get: any) => any): any {\n-  throw new Error('Function not implemented.')\n-}\n \n-\n-let maxX = 3\n-setInterval(() => {\n-  maxX++\n-  const newCard: cardType = { x: maxX, y: 0, color: 'red', name: '1' }\n-\n-  setCard([...card, newCard])\n-\n-  console.log('atom.ts - cardAtom', cardAtom)\n-}, 1000)\n"
                },
                {
                    "date": 1681728953223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,6 @@\n import React, { useEffect, useState } from 'react'\n import { useAtom } from 'jotai'\n import { cardAtom, cardType } from '../store/atom'\n \n-const CARD_BOX = {\n-  width: 60,\n-  height: 100\n+export default function Atom() {\n }\n-\n-export default function Map() {\n-}\n"
                },
                {
                    "date": 1681728980676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,8 @@\n import React, { useEffect, useState } from 'react'\n import { useAtom } from 'jotai'\n import { cardAtom, cardType } from '../store/atom'\n \n-export default function Atom() {}\n+export default function Atom() {\n+const [card ,setCard]=  useAtom(cardAtom)\n+\n+}\n"
                }
            ],
            "date": 1681728931762,
            "name": "Commit-0",
            "content": ""
        }
    ]
}